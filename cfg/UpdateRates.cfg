#!/usr/bin/env python
PACKAGE='multiwii'
import roslib
roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
#       Name                    Type      Reconfiguration level
#       Description
#       Default  Min  Max

rates = gen.add_group("Update_Rate_Hz")
rates.add("MSP2_INAV_DEBUG",          double_t, 0, "update rate of MSP2_INAV_DEBUG", 30, 0, 1000)
rates.add("MSP_RAW_IMU",        double_t, 0, "update rate of MSP_RAW_IMU", 0, 0, 1000)
rates.add("MSP_RAW_GPS",        double_t, 0, "update rate of MSP_RAW_GPS", 20, 0, 1000)
rates.add("MSP_ATTITUDE",       double_t, 0, "update rate of MSP_ATTITUDE", 30, 0, 1000)
rates.add("MSP_ALTITUDE",       double_t, 0, "update rate of MSP_ALTITUDE", 0, 0, 1000)
rates.add("MSP_RC",             double_t, 0, "update rate of MSP_RC", 0, 0, 100)
rates.add("MSP_SERVO",          double_t, 0, "update rate of MSP_SERVO", 0, 0, 100)
rates.add("MSP_MOTOR",          double_t, 0, "update rate of MSP_MOTOR", 0, 0, 1000)
rates.add("MSP_MISC",           double_t, 0, "update rate of MSP_MISC", 0, 0, 100)
rates.add("MSP_ANALOG",         double_t, 0, "update rate of MSP_ANALOG", 0, 0, 100)
rates.add("MSP_STATUS",         double_t, 0, "update rate of MSP_STATUS", 0, 0, 1000)
rates.add("MSP_SONAR_ALTITUDE", double_t, 0, "update rate of MSP_SONAR_ALTITUDE", 0, 0, 1000)

exit(gen.generate(PACKAGE, "dynamic_reconfigure_node", "UpdateRates"))
